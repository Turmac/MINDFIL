# group. The id can then be used to extract the pairs
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %>%
pull(`Group ID`))
#extarct those ids
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
gids <- sample(gids, length(gids))
#for sample we need the questions to be in random order. Also after random ordering they
#have to be numbered sequentially.
#So we group by page(type) sample all rows(for randomizing) and then get the unique gids
(gids_ordered <-
sample_i %>%
sample_n(.,size = nrow(.)) %>%
pull(`Group ID`) %>%
unique())
#we create a lookup for those gids
(lookup_scrambled <- tibble(`Group ID` = gids) %>%
mutate(qnum = 1:n()))
#number and arrange by lookup
sample_i_scrambled <-
sample_i %>%
left_join(lookup_scrambled, by = "Group ID") %>%
arrange(qnum) %>%
select(-qnum)
#extract everything but those ids for section 2
(section2  <-
starred_data %>%
filter(!(`Group ID` %in% gids)) %>%
filter(!(`Group ID` %in% attention_test)))
(gids2 <-
section2 %>%
pull(`Group ID`) %>%
unique() %>% sample(., length(.)))
#we create a lookup for those gids
(lookup2 <- tibble(`Group ID` = gids2) %>%
mutate(qnum = 1:n()))
section2_scrambled <-
section2 %>%
left_join(lookup2, by = "Group ID") %>%
arrange(qnum) %>%
select(-qnum)
#make the names standard
names(sample_i) <- col_names
names(section2) <- col_names
names(sample_i_scrambled) <- col_names
names(section2_scrambled) <- col_names
sample_i %>%
write_csv(paste0("./data_output/samples_ordered/section1_",i,".csv"), col_names = F)
section2 %>%
write_csv(paste0("./data_output/samples_ordered/section2_",i,".csv"), col_names = F)
sample_i_scrambled %>%
write_csv(paste0("./data_output/samples_scrambled/section1_",i,".csv"), col_names = F)
section2_scrambled %>%
write_csv(paste0("./data_output/samples_scrambled/section2_",i,".csv"), col_names = F)
}
names(starred_data) <- col_names
write_csv(starred_data,"./data_output/main_section_full.csv", col_names = F)
starred_data %>%
sample_n(nrow(.)) %>%
write_csv("./data_output/section2.csv",col_names = F)
library(tidyverse)
# library(dplyr)
# library(readr)
library(magrittr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "ID",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data %>%
select(`Group ID`,type,`Record ID`) %>%
group_by(type,`Record ID`) %>%
unique() %>% count(type,`Record ID`)
attention_test = c(1,7,13,19,25,31)
i = 1
(gids <-
starred_data %>%
group_by(type,`Record ID`) %>%
sample_n(1) %>%
pull(`Group ID`))
#extarct those ids
(sample_i <-
starred_data %>% filter(`Group ID` %in% gids))
gids <- sample(gids, length(gids))
gids
sample_i %>%
sample_n(.,size = nrow(.)) %>%
pull(`Group ID`) %>%
unique()
sample_i %>%
sample_n(.,size = nrow(.))
sample_i %>%
sample_n(.,size = nrow(.)) %>%
pull(`Group ID`)
sample_i %>%
sample_n(.,size = nrow(.)) %>%
pull(`Group ID`) %>%
unique()
gids
View(starred_data)
View(sample_i)
#extract everything but those ids for section 2
(section2  <-
starred_data %>%
filter(!(`Group ID` %in% gids)) %>%
filter(!(`Group ID` %in% attention_test)))
View(section2)
starred_data %>%
filter(`Group ID` %in% attention_test)
starred_data %>%
filter(`Group ID` %in% attention_test) %>% View
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
starred_data
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
starred_data
starred_data %>%
rename(id = `Group ID`,
type = `Record ID`,
page = type)
#group by type and get one random id from each type
(gids <-
starred_data %>%
group_by(type) %>%
sample_n(1) %>%
pull(id))
#group by type and get one random id from each type
(gids <-
starred_data %>%
group_by(type) %>%
sample_n(1) %>%
pull(id))
starred_data %>%
group_by(type)
starred_data %>%
group_by(type) %>%
sample_n(1)
starred_data %>%
group_by(type) %>%
sample_n(1) %>%
pull(id)
starred_data
# Reorganize confusing variable names
starred_data <-
starred_data %>%
rename(id = `Group ID`,
type = `Record ID`,
page = type)
starred_data
#group by type and get one random id from each type
(gids <-
starred_data %>%
group_by(type) %>%
sample_n(1) %>%
pull(id))
#extarct the data corresponding to those ids
(sample_i <-
starred_data %>% filter(id %in% ids))
# group by type and get one random id for each type
(ids <-
starred_data %>%
group_by(type) %>%
sample_n(1) %>%
pull(id))
#extarct the data corresponding to those ids
(sample_i <-
starred_data %>% filter(id %in% ids))
# group by type and get one random id for each type and scramble
(ids <-
starred_data %>%
group_by(type) %>%
sample_n(1) %>%
pull(id) %>%
sample(., length(.)))
#extarct the data corresponding to those ids
(sample_i <-
starred_data %>% filter(id %in% ids))
#we create a lookup for those gids
(lookup_scrambled <- tibble(ids = ids) %>%
mutate(qnum = 1:n()))
#we create a lookup for those gids
(lookup_scrambled <- tibble(ids = ids) %>%
mutate(qnum = row_number()))
starred_data %>%
select(id, type)
starred_data %>%
select(id, type) %>%
group_by(type)
starred_data %>%
select(id, type) %>%
group_by(type) %>%
sample_n(1)
ids_table <-
starred_data %>%
select(id, type) %>%
group_by(type) %>%
sample_n(1) %>%
ungroup()
ids_table %>%
filter(!type %in% attention_test)
(ids_attention <-
ids_table %>%
filter(type %in% attention_test) %>%
pull(id) %>%
sample(., length(.)))
(ids_attention <-
ids_table %>%
filter(type %in% attention_test) %>%
pull(id) %>%
sample(., length(.)))
ids_legit
(ids_legit <-
ids_table %>%
filter(!type %in% attention_test) %>%
pull(id) %>%
sample(., length(.)))
ids_legit
#extract the data corresponding to those ids
(sample_i <-
starred_data %>% filter(id %in% ids_table$ids))
rep(1:6, times = 6)
?rep
rep(1:6, 6)
rep(1:6, each = 6)
tibble(id = ids_legit, page = rep(1:6, each = 6))
tibble(id = ids_legit, page = rep(1:6, each = 5))
tibble(id = ids_legit, page = rep(seq(1,6), each = 5))
tibble(id = ids_attention, page = seq(1,6))
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6)))
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
arrange(page)
ids_attention
ids_legit
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6)
ids_attention
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6) %>% print(n = 12)
ids_attention
#we create a lookup for those gids
(lookup_scrambled <-
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6) %>%
mutate(qnum = row_number()) %>%
select(-page))
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6)))
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page)
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6)
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6) %>%
mutate(qnum = row_number())
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6) %>%
mutate(qnum = row_number()) %>%
select(-page)
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6) %>%
mutate(qnum = row_number())
#we create a lookup for those gids
(lookup_scrambled <-
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6) %>%
mutate(qnum = row_number()) %>%
ungroup() %>%
select(-page))
ids_attention
#we create a lookup for those gids
(lookup_scrambled <-
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6) %>%
ungroup() %>%
mutate(qnum = row_number()) %>%
select(-page))
lookup_scrambled
#extract the data corresponding to the ids we filtered in step 1
(sample_i <-
starred_data %>% filter(id %in% ids_table$id))
sample_i %>%
left_join(lookup_scrambled)
sample_i %>%
left_join(lookup_scrambled, by = "id")
sample_i %>%
left_join(lookup_scrambled, by = "id") %>%
arrange(qnum)
sample_i %>%
left_join(lookup_scrambled, by = "id") %>%
arrange(qnum) %>%
select(-qnum)
ids_attention
starred_data %>%
filter(!(id %in% ids_table$id))
#extract everything but those ids for section 2
(section2  <-
starred_data %>%
filter(!(id %in% ids_table$id)) %>%
filter(!(type %in% attention_test)))
starred_data
746 - 30*2 - 6*12*2
(sec2_ids_scrambled <-
section2 %>%
pull(id) %>%
unique() %>%
sample(., length(.)))
sec2_ids_scrambled
#we create a lookup for those gids
(lookup_sec2 <-
tibble(id = sec2_ids_scrambled) %>%
mutate(qnum = 1:n()))
section2_scrambled <-
section2 %>%
left_join(lookup_sec2, by = "id") %>%
arrange(qnum) %>%
select(-qnum)
section2_scrambled
sec2_ids_scrambled
library(tidyverse)
library(magrittr)
is_not_empty <- function(string) {
if(is.na(string) | string == "" | string == ".") {
return(FALSE)
} else {
return(TRUE)
}
}
is_not_empty = Vectorize(is_not_empty)
col_names <- c("Group ID", "ID",
"FF", "First Name",
"Last Name", "LF",
"DoB", "Sex", "Race",
"Reg No.", "First Name", "Last Name",
"DoB", "Sex", "Race",
"Record ID", "type","Same")
#[Group ID, Reg No., FF, First Name, Last Name, LF,
# DoB, Race, Reg No., First Name, Last Name,
#DoB, Race, Record ID, type, Answer]
(starred_data <- read_csv("./data_intermediate/all_starred_race.csv",
col_types = cols(.default = "c", `Group ID` = "i")) %>%
mutate_all(funs(ifelse(is_not_empty(.),.,""))) %>%
mutate(src = str_extract(`Record ID`, "[AB]")) %>%
rename(fname = `First Name`,
lname = `Last Name`))
(starred_data <-
starred_data %>%
mutate(`Record ID` = str_extract(`Record ID`,"[0-9]+")))
starred_data <-
starred_data %>%
select(`Group ID`, `Reg No.`, FF, fname, lname, LF,
DoB,Sex, Race, `Reg No._1`, `First Name_1`, `Last Name_1`, DoB_1,Sex_1, Race_1,
`Record ID`, type, Same) %>%
arrange(as.numeric(`Group ID`))
# Reorganize confusing variable names
starred_data <-
starred_data %>%
rename(id = `Group ID`,
type = `Record ID`,
page = type)
attention_test = c(1,7,13,19,25,31)
set.seed(1)
for(i in 1:10) {
# group by type and get one random pair for each type
# sampling to ensure different samples get different questions
ids_table <-
starred_data %>%
select(id, type) %>%
group_by(type) %>%
sample_n(1) %>%
ungroup()
# separate non-atention questions and scramble
# scramble to ensure order of questions is different
(ids_legit <-
ids_table %>%
filter(!type %in% attention_test) %>%
pull(id) %>%
sample(., length(.)))
# separate attention questions and sample
# sample to ensure attention questions also do not have a set order
(ids_attention <-
ids_table %>%
filter(type %in% attention_test) %>%
pull(id) %>%
sample(., length(.)))
# create tables by assigning pages 1 - 6 for both the ids
# bind the tables, and scramble withig a page to ensure attention questions not always the last in page
# ungroup and add question number to later sort the sample by
# remove page to avoid confusion
(lookup_scrambled <-
tibble(id = ids_legit, page = rep(seq(1,6), each = 5)) %>%
bind_rows(tibble(id = ids_attention, page = seq(1,6))) %>%
group_by(page) %>%
sample_n(6) %>%
ungroup() %>%
mutate(qnum = row_number()) %>%
select(-page))
# extract the data corresponding to the ids we filtered in step 1
# this table is obviously not scrambled
(sample_i <-
starred_data %>% filter(id %in% ids_table$id))
# number and arrange by lookup
sample_i_scrambled <-
sample_i %>%
left_join(lookup_scrambled, by = "id") %>%
arrange(qnum) %>%
select(-qnum)
#extract everything but those ids for section 2
(section2  <-
starred_data %>%
filter(!(id %in% ids_table$id)) %>%
filter(!(type %in% attention_test)))
(sec2_ids_scrambled <-
section2 %>%
pull(id) %>%
unique() %>%
sample(., length(.)))
#we create a lookup for those gids
(lookup_sec2 <-
tibble(id = sec2_ids_scrambled) %>%
mutate(qnum = 1:n()))
section2_scrambled <-
section2 %>%
left_join(lookup_sec2, by = "id") %>%
arrange(qnum) %>%
select(-qnum)
# #make the names standard
# names(sample_i) <- col_names
# names(section2) <- col_names
# names(sample_i_scrambled) <- col_names
# names(section2_scrambled) <- col_names
sample_i %>%
write_csv(paste0("./data_output/samples_ordered/section1_",i,".csv"), col_names = F)
section2 %>%
write_csv(paste0("./data_output/samples_ordered/section2_",i,".csv"), col_names = F)
sample_i_scrambled %>%
write_csv(paste0("./data_output/samples_scrambled/section1_",i,".csv"), col_names = F)
section2_scrambled %>%
write_csv(paste0("./data_output/samples_scrambled/section2_",i,".csv"), col_names = F)
}
names(starred_data) <- col_names
write_csv(starred_data,"./data_output/main_section_full.csv", col_names = F)
starred_data %>%
sample_n(nrow(.)) %>%
write_csv("./data_output/section2.csv",col_names = F)
sample_i
